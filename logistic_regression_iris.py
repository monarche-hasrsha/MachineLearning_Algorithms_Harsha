# -*- coding: utf-8 -*-
"""logistic_regression_iris.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QKwp6eMf81OMzbRtBZ830PA9m-88YglD
"""



"""## Load the dataset

### Subtask:
Load the iris dataset using scikit-learn.

**Reasoning**:
Import the `load_iris` function, load the dataset, and print the keys to understand its structure.
"""

from sklearn.datasets import load_iris

iris = load_iris()
print(iris.keys())

"""## Prepare data

### Subtask:
Split the dataset into training and testing sets.

**Reasoning**:
Split the iris dataset into training and testing sets using train_test_split.
"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.2, random_state=42)

print(f"X_train shape: {X_train.shape}")
print(f"X_test shape: {X_test.shape}")
print(f"y_train shape: {y_train.shape}")
print(f"y_test shape: {y_test.shape}")

"""## Train the model

### Subtask:
Train a logistic regression model on the training data.

**Reasoning**:
Import the LogisticRegression class, instantiate a LogisticRegression object, and fit the model to the training data.
"""

from sklearn.linear_model import LogisticRegression

model = LogisticRegression()
model.fit(X_train, y_train)

"""## Evaluate the model

### Subtask:
Evaluate the model's performance on the testing data.

**Reasoning**:
Use the trained model to make predictions on the test set, calculate the accuracy of the model, and print the accuracy.
"""

from sklearn.metrics import accuracy_score

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Model accuracy: {accuracy}")

"""## Summary:

### Data Analysis Key Findings

*   The iris dataset was successfully loaded, containing data, target labels, feature names, target names, and a description.
*   The dataset was split into training (80%) and testing (20%) sets, resulting in 120 samples for training and 30 for testing.
*   A logistic regression model was successfully trained using the training data.
*   The trained logistic regression model achieved an accuracy of 1.0 on the testing data, indicating perfect classification on this specific test set.

### Insights or Next Steps

*   The perfect accuracy on the test set suggests that the logistic regression model is highly effective for classifying the iris dataset, at least on this particular data split.
*   Consider exploring other evaluation metrics (e.g., precision, recall, F1-score) and potentially cross-validation to get a more robust understanding of the model's performance and generalization ability.

"""